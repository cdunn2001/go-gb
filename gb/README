 gb will identify any possible targets existing in subdirectories of the current
working directory, and act on them as appropriate. If a directory list is sup-
plied on the command line, only targets residing in those directories and their
dependencies will be built.

 If a target's directory contains a directory 'src', that directory will be
recursively searched for any source files, and no additional targets will be
created for directories found within the src directory.

 By default, the target built from a particular directory is the same as the
relative path to that directory. By providing a file 'target.gb' in the direct-
ory, one can change the target. This affects all subdirectories, as well. If a
directory 'a' has a target.gb file containing the line 'a.googlecode.com/hg/a',
then the directory 'a/b' will have the target 'a.googlecode.com/hg/a/b'.

 In addition to providing target.gb, the programmer can also put a comment in
one of the package's source files, before the package statement. The comment is
of the form '//target:<name>'. It has the same effect as providing target.gb. If
a target.gb file exists, it will be used instead of the comment.

 The makefiles generated with the -M option will still allow each package to be
linked against each other package (if they are built in the correct order), by
copying binaries to a top level _obj directory and adding that directory to the
compile and link command line. A build script is also provided that runs the
makefiles in the correct topological order.
